---
  name: Synchronize Poetry

  on:
    workflow_call:
      inputs:
        head:
          description: The branch to operate on
          type: string
          required: true
        version:
          description: The version to bump to
          type: string
          required: true

  jobs:
    poetry:
      runs-on: ubuntu-latest
      permissions:
        contents: write
      steps:
        - uses: actions/checkout@v4
        - uses: actions/cache/restore@v4
          id: cache
          with:
            key: ${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}-${{ inputs.version }}
            path: |
              pyproject.toml
              poetry.lock
        - name: install-poetry
          if: steps.cache.outputs.cache-hit != 'true'
          run: |
            pipx install poetry
        - uses: actions/setup-python@v5
          if: steps.cache.outputs.cache-hit != 'true'
          with:
            python-version: 3.11
            cache: 'poetry'
        - name: check
          if: steps.cache.outputs.cache-hit != 'true'
          run: poetry check
        - name: lock
          if: steps.cache.outputs.cache-hit != 'true'
          run: poetry lock
        - name: version
          id: poetry-version
          if: steps.cache.outputs.cache-hit != 'true'
          run: echo "msg=$(poetry version -- ${{ inputs.version }})" >> "$GITHUB_OUTPUT"
        - name: git-commit
          if: steps.cache.outputs.cache-hit != 'true'
          run: |
            git config --global user.email ""
            git config --global user.name "github-actions[bot]"
            git diff --exit-code || {
              git commit -am "chore[bump]: ${{ steps.poetry-version.outputs.msg }}"
              git push
            }
        - uses: actions/cache/save@v4
          if: steps.cache.outputs.cache-hit != 'true'
          with:
            key: ${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}-${{ inputs.version }}
            path: |
              pyproject.toml
              poetry.lock
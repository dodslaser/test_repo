---
name: Release PR

permissions:
  pull-requests: write

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      head:
        description: The HEAD to use for the PR
        type: string
        required: true
      base:
        description: The base to use for the PR
        type: string
        required: true
      version:
        description: The version to bump to
        type: string
        required: true
      changes:
        description: The changelog for the next release
        type: string
        required: true
    outputs:
      pr_number:
        description: The number of the created PR
        value: ${{ jobs.release-pr.outputs.pr_number }}

jobs:
  release-pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    outputs:
      pr_number: ${{ steps.create-or-update-pr.outputs.pull-request-number }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.base }}
          fetch-depth: 0
      - name: git-reset
        run: git reset --hard origin/${{ inputs.head }}
      - uses: peter-evans/create-pull-request@v6
        id: create-or-update-pr
        with:
          title: "Release ${{ inputs.version }} ðŸš€"
          body: ${{ inputs.changes }}
          branch: ${{ inputs.head }}
          base: ${{ inputs.base }}
          labels: release
      - name: comment-pr
        if: steps.create-or-update-pr.outputs.pull-request-operation == 'created'
        env:
          GH_TOKEN: ${{ github.token }}
          comment: |
            # ðŸ¤– \*bleep bloop\*

            This is a fully automated release PR. When merged I will ~~enslave all humans~~ create a new release with the listed changes.
        run: gh pr comment ${{ inputs.head }} --body '${{ env.comment }}'

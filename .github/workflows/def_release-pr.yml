# Create a release PR or update an existing one
---
  name: 'Create/Update Release PR'

  on:
    workflow_call:

  jobs:
    release-pr:
      runs-on: ubuntu-latest
      permissions:
        pull-requests: write
        contents: write

      steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - uses: requarks/changelog-action@v1
        id: changelog
        with:
          token: ${{ github.token }}
          writeToFile: false
          fromTag: dev
          toTag: main

      - uses: ietf-tools/semver-action@v1
        id: semver-version
        with:
          token: ${{ github.token }}
          branch: dev
          noVersionBumpBehavior: patch

      - name: git-reset
        run: git reset --hard origin/dev

      - uses: actions/cache/restore@v4
        id: cache
        with:
          key: ${{ hashFiles('pyproject.toml') }}_${{ steps.semver-version.outputs.next }}
          path: pyproject.toml
          lookup-only: true

      - name: poetry-version
        if: steps.cache.outputs.cache-hit != 'true'
        env:
          message: "chore: Bump version (${{ steps.semver-version.outputs.current }} -> ${{ steps.semver-version.outputs.next }})"
          bump-trailer: 'bump:${{ steps.semver-version.outputs.current }}'
        run: |
          pipx install poetry
          poetry version -- ${{ steps.semver-version.outputs.next }}
          _bump=$(git log --grep '${{ env.bump-trailer }}' --oneline | cut -d' ' -f1)
          git commit -am '${{ env.message }}' --trailer='${{ env.bump-trailer}}' ${_bump:+--fixup=$_bump}
          git -c sequence.editor=: rebase -i --autosquash

      - uses: actions/cache/save@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          key: ${{ hashFiles('pyproject.toml') }}_${{ steps.semver-version.outputs.next }}
          path: pyproject.toml

      - name: create-or-update-pr
        env:
          GH_TOKEN: ${{ github.token }}
          title: 'Release ${{ steps.semver-version.outputs.next }} ðŸŽ‰'
          body: ${{ steps.changelog.outputs.changes }}
          label: 'release'
          comment: |
            # ðŸ¤– \*bleep bloop\*

            This is a fully automated release PR. When merged I will ~~enslave all humankind~~ create a new release with the listed changes.
        run: |
          {
            gh pr create --title '${{ env.title }}' --body '${{ env.body }}' --label '${{ env.label }}' --base main --head dev
          } && {
            gh pr comment dev --body '${{ env.comment }}'
          } || {
            gh pr edit dev --title '${{ env.title }}' --body '${{ env.body }}' --add-label '${{ env.label }}'
          }



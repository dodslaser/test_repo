# Use poetry to get/set the version of a project
---
  name: 'Poetry Version'

  on:
    workflow_call:
      inputs:
        ref:
          description: 'The git ref to checkout'
          type: string
          default: 'main'
        version:
          description: New version to set
          type: string
          default: ''
      outputs:
        version:
          description: 'Version as returned by poetry'
          value: ${{ jobs.poetry-version.outputs.version }}
        pyproject-toml:
          description: 'The contents of pyproject.toml after execution'
          value: ${{ jobs.poetry-version.outputs.pyproject-toml }}

  jobs:
    poetry-version:
      runs-on: ubuntu-latest
      outputs:
        version: ${{ steps.poetry-version.outputs.version }}
        pyproject-toml: ${{ steps.poetry-version.outputs.pyproject-toml }}
      steps:
        - uses: actions/checkout@v4
          with:
            ref: ${{ inputs.ref }}
        - uses: actions/cache/restore@v4
          id: cache
          with:
            key: "${{ inputs.version }}-${{ hashFiles('pyproject.toml') }}"
            path: pyproject.toml
        - name: poetry-version
          id: poetry-version
          run: |
            if [[ '${{ steps.cache.outputs.cache-hit }}' == 'true' ]]; then
              echo version=${{ inputs.version }} | tee -a "$GITHUB_OUTPUT"
            else
              pipx install poetry
              echo version=$(poetry version -s -- '${{ inputs.version }}') | tee -a "$GITHUB_OUTPUT"
            fi
            echo pyproject-toml=$(cat pyproject.toml) >> "$GITHUB_OUTPUT"
        - uses: actions/cache/save@v4
          if: steps.cache.outputs.cache-hit != 'true'
          with:
            key: ${{ steps.cache.outputs.cache-primary-key }}
            path: pyproject.toml

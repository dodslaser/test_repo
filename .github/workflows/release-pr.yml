# Create or update a release PR for merging dev -> main
---
  name: Release PR

  on:
    push:
      branches: [dev]

  jobs:
    changes:
      runs-on: ubuntu-latest
      outputs:
        changes: '${{ steps.changelog.outputs.changes }}'
      steps:
      - uses: actions/checkout@v4
      - uses: requarks/changelog-action@v1
        id: changelog
        with:
          token: ${{ github.token }}
          fromTag: dev
          toTag: main
          writeToFile: false
          excludeScopes: 'bump'

    version:
      runs-on: ubuntu-latest
      outputs:
        current: ${{ steps.semver.outputs.current }}
        next: ${{ steps.semver.outputs.next }}
      steps:
      - uses: actions/checkout@v4
      - uses: ietf-tools/semver-action@v1
        id: semver
        with:
          token: ${{ github.token }}
          branch: dev
          noVersionBumpBehavior: 'patch'

    bump-pyproject-version:
      runs-on: ubuntu-latest
      needs: [version]
      permissions:
        contents: write
      steps:
        - uses: actions/checkout@v4
        - name: poetry-version
          run: |
            pipx install poetry
            poetry version -- ${{ needs.version.outputs.next }}
        - name: git-commit
          run: |
            git config --global user.email ""
            git config --global user.name "github-actions[bot]"
            git commit -am "chore[bump]: Bump version (${{ needs.version.outputs.current }} -> ${{ needs.version.outputs.next }})"
            git push

    release-pr:
      runs-on: ubuntu-latest
      needs: [changes, version, bump-pyproject-version]
      permissions:
        pull-requests: write
      steps:
        - uses: actions/checkout@v4
        - name: create-or-update
          env:
            GH_TOKEN: ${{ github.token }}
            title: Release ${{ needs.version.outputs.next }} ðŸš€
            comment: |
              # ðŸ¤– \*bleep bloop\*

              This is a fully automated release PR. When merged I will ~~enslave all humans~~ create a new release with the listed changes.
          run: |
            {
              gh pr create --base main --head dev --title '${{ env.title }}' --body '${{ needs.changes.outputs.changes }}' --label 'release'
            } && {
              gh pr comment dev --body '${{ env.comment }}'
            } || {
              gh pr edit dev --base main --title '${{ env.title }}' --body '${{ needs.changes.outputs.changes }}' --add-label 'release'
            }
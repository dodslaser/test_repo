on:
  push:
    branches:
      - dev

jobs:
  read-modules-json:
    runs-on: ubuntu-latest
    outputs:
      json: ${{ steps.read-file.outputs.json }}
    steps:
      - uses: actions/checkout@v4
      - id: read-file
        run: echo json=$(cat modules.json) >> "$GITHUB_OUTPUT"

  get-cellophane-tags:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.get-tags.outputs.tags }}
    env:
      GH_TOKEN: ${{ github.token }}
      cellophane_repo: ClinicalGenomicsGBG/cellophane
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: get-tags
        id: get-tags
        run: |
          echo tags=$(
            gh release list \
              --repo '${{ env.cellophane_repo }}' \
              --json tagName \
              --exclude-drafts \
              --exclude-pre-releases \
              --jq '[.[].tagName]'
            ) >> "$GITHUB_OUTPUT"

  test-compatability:
    name: ${{ matrix.json.name }}-0.42.0_cellophane-${{ matrix.tag }}
    needs: [read-modules-json, get-cellophane-tags]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: ${{ fromJson(needs.get-cellophane-tags.outputs.tags) }}
        json: ${{ fromJson(needs.read-modules-json.outputs.json) }}
    env:
      path: '${{ matrix.json.name }}-${{ matrix.tag }}-1.33.7.json'
      jq_script: >
        .versions |=.+ [
          {
            tag: "0.42.0",
            "cellophane": ["${{ matrix.tag }}"]
          }
        ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: latest-tag
        id: latest-tag
        run: echo tag=$(git describe --tags --abbrev=0 --match '${{ matrix.json.name }}/*') >> "$GITHUB_OUTPUT"
      - name: get-commits
        id: get-commits
        run: |
          echo commits=$(
            git log \
              --format="%s" \
              ${{ steps.latest-tag.outputs.tag }}.. \
              -- ${{ matrix.json.path }}
          ) >> "$GITHUB_OUTPUT"

      - uses: ietf-tools/semver-action@v1
        id: semver
        with:
          token: ${{ github.token }}
          prefix: '${{ matrix.json.name }}/'
          additionalCommits: ${{ steps.get-commits.outputs.commits }}
          noVersionBumpBehavior: patch
          branch: ${{ steps.latest-tag.outputs.tag }}

      - run: |
          jq '
            .versions |=.+ [
              {
                tag: "${{ steps.semver.outputs.next }}",
                "cellophane": ["${{ matrix.tag }}"]
              }
            ]
          ' <<< '${{ toJson(matrix.json) }}' > "${{ env.path }}"
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.path }}
          path: ${{ env.path }}

  output:
    needs: test-compatability
    runs-on: ubuntu-latest
    env:
      jq_script: >
        group_by(.name) | map(
          first.versions = (
            [.[].versions] | (
              add | unique | group_by(.tag) | map(
                first.cellophane = (
                    [.[].cellophane]
                    | add
                    | unique
                ) | first
              )
            )
          ) | first
        )
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: versions
          merge-multiple: true
      - run: jq -s '${{ env.jq_script }}' versions/*.json
